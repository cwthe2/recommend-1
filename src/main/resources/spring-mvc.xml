<?xml version="1.0" encoding="UTF-8"?>
<beans    default-lazy-init="true"  
xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:mvc="http://www.springframework.org/schema/mvc"	
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
                        http://www.springframework.org/schema/aop   
                        http://www.springframework.org/schema/aop/spring-aop-3.1.xsd   
                        http://www.springframework.org/schema/context  
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd  
                        http://www.springframework.org/schema/mvc                          
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">
	<!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->
	<context:component-scan base-package="com.manager.controller" />
	
	
	  
    <!-- <aop:aspectj-autoproxy /> -->
    
   
	<!--避免IE执行AJAX时，返回JSON出现下载文件 -->
	<bean id="mappingJacksonHttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
			</list>
		</property>
	</bean>
	
	
	


	<!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="mappingJacksonHttpMessageConverter" />	<!-- JSON转换器 -->
			</list>
		</property>
	</bean>
	<mvc:annotation-driven />
	
	<!-- <mvc:resources location="/aigx/" mapping="/aigx/**" />
	<mvc:resources location="/BeyondAdmin/" mapping="/BeyondAdmin/**" />
	<mvc:resources location="/static/" mapping="/static/**" />
	<mvc:resources location="/public/" mapping="/public/**" />
	<mvc:resources location="/upload/" mapping="/upload/**" />
	<mvc:resources location="/uploadDir/" mapping="/uploadDir/**" />
   <mvc:resources location="/template/" mapping="/template/**" /> -->
	<mvc:resources location="/public/" mapping="/public/**" />
	<mvc:resources location="/admin/" mapping="/admin/**" />
	 	<mvc:interceptors>
		<!-- 使用bean定义一个Interceptor，直接定义在mvc:interceptors根下面的Interceptor将拦截所有的请求 -->
		 <mvc:interceptor>
			 <mvc:mapping path="/**" /> 
		
			<bean class="com.college.manage.interceptor.AuthorityInterceptor" />
		</mvc:interceptor> 
		
	</mvc:interceptors> 
	
	
	
	 <bean
		class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<!-- 定义默认的异常处理页面，当该异常类型的注册时使用 -->
		<property name="defaultErrorView" value="/exception/DefaultExceptionView"></property>
		<!-- 定义异常处理页面用来获取异常信息的变量名，默认名为exception -->
		<property name="exceptionAttribute" value="ex"></property>
		<!-- 定义需要特殊处理的异常，用类名或完全路径名作为key，异常以页名作为值 -->
		<property name="exceptionMappings">
			<props>
				<!-- 创建自己所要自定义的异常类 -->
				<prop key="com.college.manage.exception.AuthorityException">/exception/AuthorityException</prop>			
			<!-- 	还可以继续扩展对不同异常类型的处理 -->
			</props>
		</property>
		<!-- <property name="statusCodes">
			<props>
				<prop key="/admin/exception/DefaultException">404</prop>
				<prop key="/admin/exception/DefaultException">500</prop>
			</props>
		</property> -->
	</bean> 

	
 
	
          
          
       <!--  <bean id="freemarkerConfig"  
         class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">  
            <property name="templateLoaderPath" value="/WEB-INF/view/" />  
            <property name="defaultEncoding" value="UTF-8" />  
            <property name="freemarkerSettings">  
                 <props>
                <prop key="template_update_delay">5</prop>刷新模板的周期，单位为秒
                <prop key="default_encoding">UTF-8</prop>模板的编码格式
                <prop key="locale">UTF-8</prop>本地化设置
                <prop key="datetime_format">yyyy-MM-dd HH:mm:ss</prop>
                <prop key="time_format">HH:mm:ss</prop>
                <prop key="number_format">0.####</prop>
                <prop key="boolean_format">true,false</prop>
                <prop key="whitespace_stripping">true</prop>
                <prop key="tag_syntax">auto_detect</prop>
                <prop key="url_escaping_charset">UTF-8</prop>
            </props> 
            </property>  
            <property name="freemarkerVariables">  
              <map>  
                    <entry key="candidate">  
                        <bean class="com.igxcms.tag.CandidateDirective" />  
                    </entry>  
                    <entry key="arcList">  
                        <bean class="com.igxcms.tag.ArcListTag" />  
                    </entry>
                    
                    <entry key="arc">  
                        <bean class="com.igxcms.tag.ArcTag" />  
                    </entry>
                    
                    <entry key="channel">  
                        <bean class="com.igxcms.tag.ChannelListTag" />  
                    </entry>
                    
                     <entry key="getFileUrl">  
                        <bean class="com.igxcms.tag.GetFileUrl" />  
                    </entry>
                    
                    <entry key="getManyFileUrl">  
                        <bean class="com.igxcms.tag.GetManyFileUrl" />  
                    </entry>

                </map>  
            </property>  
    </bean>   -->
    
    
    
 
       <bean id="viewResolverCommon" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
          <property name="prefix" value="/WEB-INF/jsp/" />
          <property name="suffix" value=".jsp" />
          <property name="viewClass" value="org.springframework.web.servlet.view.InternalResourceView"/>
          <property name="order" value="1" />
       </bean>
  
      <!-- <bean id="viewResolverFtl" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
          <property name="viewClass" value="org.springframework.web.servlet.view.freemarker.FreeMarkerView" />
		  <property name="contentType" value="text/html; charset=UTF-8"/>  
          <property name="cache" value="false" />
          <property name="suffix" value=".ftl" />
          <property name="requestContextAttribute" value="request" />
          <property name="order" value="0" />
      </bean> -->
 
	
	<!-- 
	定义跳转的文件的前后缀 ，视图模式配置
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址
		<property name="prefix" value="/WEB-INF/view/" />
		<property name="suffix" value=".jsp" />
	</bean>
	 -->
	

</beans>